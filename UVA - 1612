#include<bits/stdc++.h>
using namespace std;
struct score
{
    double fir,sec,thi,ans;
} score[20010];
int all[20010];
double solve(double sum,int num,bool equal)
{
    if(equal)
        sum+=1.0;
    double now=-1;
    if(score[num].ans<sum)
        return score[num].ans;
    else
    {
        if(score[num].ans-score[num].fir<sum)
            now=max(now,score[num].ans-score[num].fir);
        if(score[num].ans-score[num].sec<sum)
            now=max(now,score[num].ans-score[num].sec);
        if(score[num].ans-score[num].thi<sum)
            now=max(now,score[num].ans-score[num].thi);
        if(score[num].ans-score[num].fir-score[num].sec<sum)
            now=max(now,score[num].ans-score[num].fir-score[num].sec);
        if(score[num].ans-score[num].fir-score[num].thi<sum)
            now=max(now,score[num].ans-score[num].fir-score[num].thi);
        if(score[num].ans-score[num].thi-score[num].sec<sum)
            now=max(now,score[num].ans-score[num].thi-score[num].sec);
        if(0<sum)
            now=max(now,(double)0);
    }
    return now;
}
int main()
{
    int n,count=0;
    while(scanf("%d",&n)&&n)
    {
        memset(all,0,sizeof(all));
        for(int i=1; i<=n; i++)
        {
            scanf("%lf%lf%lf",&score[i].fir,&score[i].sec,&score[i].thi);
            score[i].ans=score[i].fir+score[i].sec+score[i].thi;
        }
        for(int i=1; i<=n; i++)
            scanf("%d",&all[i]);
        double sum=score[all[1]].ans;
        for(int i=2; i<=n; i++)
            sum=solve(sum,all[i],all[i]>all[i-1]);
        if(sum<0)
            printf("Case %d: No solution\n",++count);
        else
            printf("Case %d: %.2lf\n",++count,sum);
    }
    return 0;
}
