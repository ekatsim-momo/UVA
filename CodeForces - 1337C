#include<bits/stdc++.h>
using namespace std;
vector<long long>edge[200010];
struct p
{
    long long num,id;
    p(long long a,long long b):num(a),id(b){}
    bool operator <(const p&a)const
    {
        return num-id<a.num-a.id;
    }
};
vector<p>all;
long long dfs(long long num,long long last,long long sum,long long len)
{
    long long size=edge[num].size(),m;
    for(long long i=0;i<size;i++)
    {
        if(edge[num][i]!=last)
            len+=dfs(edge[num][i],num,sum+1,0);
    }
    all.push_back(p(sum,len));
    return len+1;
}
int main()
{
long long n,k,fr,to;
scanf("%lld%lld",&n,&k);
for(int i=1;i<n;i++)
{
    scanf("%lld%lld",&fr,&to);
    edge[fr].push_back(to);
    edge[to].push_back(fr);
}
long long sum=0;
dfs(1,0,0,0);
long long size=edge[1].size();
sort(all.begin(),all.end());
    for(vector<p>::iterator i=all.end()-1;k>0;i--,k--)
   {
       sum+=(*i).num-(*i).id;
       if(i==all.begin())
        break;
   }
   cout<<sum;
    return 0;
}
