//01分数规划
#include<bits/stdc++.h>
using namespace std;
int yes[100100];
double sum[100100];
int t,n,len;
bool solve(double now,int ok)
{
    int lef,righ,nle;
    for(int i=1;i<=n;i++)
    {
        if(yes[i])
            sum[i]=sum[i-1]+1.0-now;
        else
            sum[i]=sum[i-1]-now;
    }
    double mi=2147483647,an=-9999999;
    for(int i=len;i<=n;i++)
    {
        if(sum[i-len]<mi)
            nle=i-len+1;
        mi=min(sum[i-len],mi);
        if(sum[i]-mi>an+1e-8)
        {
            lef=nle;
            righ=i;
        }
        an=max(an,sum[i]-mi);
    }
    if(ok)
        printf("%d %d\n",lef,righ);
    return an>=0;
}
int main()
{
    double left,right,mid;
    scanf("%d",&t);
    while(t--)
    {
        left=0,right=1;
        scanf("%d%d",&n,&len);
        for(int i=1;i<=n;i++)
            scanf("%1d",&yes[i]);
        while(left<right-1e-8)
        {
            mid=(left+right)/2;
            if(solve(mid,0))
                left=mid;
            else
                right=mid;
        }
        mid=(left+right)/2;
        solve(mid,1);
    }
    return 0;
}



//刘汝佳的思路
#include<bits/stdc++.h>
using namespace std;
const int maxn = 100005;
int n, L;
char s[maxn];
int sum[maxn], p[maxn];
int compare_average(int x1, int x2, int x3, int x4)
{
  return (sum[x2]-sum[x1-1]) * (x4-x3+1) - (sum[x4]-sum[x3-1]) * (x2-x1+1);
}
int main()
{
  int T;
  scanf("%d", &T);
  while(T--)
    {
    scanf("%d%d%s", &n, &L, s+1);
    sum[0] = 0;
    for(int i = 1; i <= n; i++)
    sum[i] = sum[i-1] + s[i] - '0';
    int ansL = 1, ansR = L;
    int i = 0, j = 0;
    for (int t = L; t <= n; t++)
    {
      while (j-i > 1 && compare_average(p[j-2], t-L, p[j-1], t-L) >= 0)
       j--;
      p[j++] = t-L+1;
      while (j-i > 1 && compare_average(p[i], t, p[i+1], t) <= 0)
      i++;
      int c = compare_average(p[i], t, ansL, ansR);
      if (c > 0 || c == 0 && t - p[i] < ansR - ansL)
      {
        ansL = p[i];
        ansR = t;
      }
    }
    printf("%d %d\n", ansL, ansR);
  }
  return 0;
}
